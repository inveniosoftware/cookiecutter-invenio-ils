version: "2.3"
services:
  app:
    build:
      context: ./
      dockerfile: ./docker/backend/Dockerfile
      args:
        - ENVIRONMENT=DEV
    image: {{ cookiecutter.project_shortname }}
    ports:
      - "5000"
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=['search:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://{{cookiecutter.project_shortname}}:{{cookiecutter.project_shortname}}@db/{{cookiecutter.project_shortname}}"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
      - "INVENIO_SPA_HOST=https://127.0.0.1"
      - "INVENIO_REST_CSRF_ENABLED=False"
  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/Dockerfile
    image: {{cookiecutter.project_shortname}}-frontend
    ports:
      - "80"
      - "443"
  cache:
    image: redis:7
    read_only: true
    ports:
      - "6379:6379"
  db:
    image: postgres:14
    environment:
      - "POSTGRES_USER={{cookiecutter.project_shortname}}"
      - "POSTGRES_PASSWORD={{cookiecutter.project_shortname}}"
      - "POSTGRES_DB={{cookiecutter.project_shortname}}"
    ports:
      - "5432:5432"
  mq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
  search:
    image: opensearchproject/opensearch:2.11.1
    environment:
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - discovery.type=single-node
      # Enable the following config for testing big datasets e.g 100k records
      # - cluster.routing.allocation.disk.threshold_enabled=true
      # - cluster.routing.allocation.disk.watermark.flood_stage=1gb
      # - cluster.routing.allocation.disk.watermark.low=100gb
      # - cluster.routing.allocation.disk.watermark.high=50gb
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9200:9200"
      - "9300:9300"
  flower:
    image: mher/flower:0.9.7
    command: --broker=amqp://guest:guest@mq:5672/ --broker_api=http://guest:guest@mq:15672/api/
    ports:
      - "5555:5555"
